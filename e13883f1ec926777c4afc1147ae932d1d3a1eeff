schema: tigs.chat/v1
messages:
- role: assistant
  content: |
    Now let me get a summary of the key changes by looking at some of the major commits:
  timestamp: '2025-09-27T06:10:50Z'
  log_uri: 'dff17c84-77e6-433f-9745-19f645ee8708'
- role: assistant
  content: |
    Now let me create a comprehensive PR description based on all the changes in this branch:

    ---

    ## Enhanced Message Management with Per-Log-File Support

    ### Overview
    This PR introduces a major enhancement to Tigs message management, implementing **per-log-file message storage** with automatic message selection and improved user experience. The changes enable storing messages from multiple Claude Code log files to the same commit while maintaining separation between different conversation contexts.

    ### Key Features

    #### üéØ **Per-Log-File Message Management**
    - **Selective Storage**: When storing messages to a commit, only messages from the current log file are replaced, preserving messages from other log files
    - **Multiple Conversations**: Support for associating multiple Claude Code conversations with a single commit
    - **Content Isolation**: Each log file's messages are managed independently while being stored together

    #### üîÑ **Auto-Select Messages from Stored Commits**
    - **Visual Feedback**: When selecting commits (Space key), automatically highlights corresponding messages that were previously stored
    - **Smart Matching**: Compares stored content with current messages using normalized content comparison
    - **Multi-Commit Support**: Shows messages from all selected commits simultaneously
    - **Persistent Selection**: Maintains selection across log file switches

    #### üéØ **Single Commit Selection (Simplified UX)**
    - **Focused Workflow**: Space key now selects only one commit at a time for clearer intent
    - **Disabled Multi-Selection**: Removed visual mode (v), select all (a), and clear selection (c) to prevent accidental bulk operations
    - **Simplified Storage**: Storage operations now work with single commit instead of multiple

    #### üîß **Robust Content Matching**
    - **Normalized Comparison**: Handles different line endings (`\r\n`, `\r` ‚Üí `\n`) and trailing whitespace
    - **Regex Normalization**: Strips trailing spaces from each line before content matching
    - **Role Handling**: Consistent role conversion between string and enum formats
    - **Error Resilience**: Graceful handling of missing attributes or parsing failures

    ### Technical Implementation

    #### **Core Architecture Changes**
    - **Message Objects**: Replaced tuple storage `(role, content, timestamp)` with proper `Message` objects containing `log_uri` attribute
    - **API Migration**: Updated from `log_id` to `log_uri` throughout codebase (cligent 0.1.4 compatibility)
    - **Per-Log Storage Logic**: Implemented `_update_commit_messages_for_log_uri()` for granular message management

    #### **Enhanced Content Processing**
    ```python
    # Before: Simple tuple comparison
    if stored_tuple == current_tuple:

    # After: Robust normalized comparison
    current_normalized = re.sub(r'[ \t]+$', '', current_clean.replace('\r\n', '\n'), flags=re.MULTILINE)
    stored_normalized = re.sub(r'[ \t]+$', '', stored_clean.replace('\r\n', '\n'), flags=re.MULTILINE)
    if current_normalized == stored_normalized:
    ```

    #### **Dependency Updates**
    - **cligent 0.1.4**: Upgraded to support `log_uri` and improved Message objects
    - **Test Infrastructure**: Comprehensive test suite updates with `create_mock_message()` helper

    ### Files Changed

    #### **Core Implementation** (7 files)
    - `src/tui/store_app.py` - Per-log-file storage logic, auto-selection, single commit selection
    - `src/tui/messages_view.py` - Message object handling, display improvements
    - `src/tui/view_app.py` - Message object integration
    - `src/tui/logs_view.py` - API updates (`log_id` ‚Üí `log_uri`)
    - `src/tui/commits_view.py` - Single selection enforcement
    - `pyproject.toml` - cligent 0.1.4 upgrade

    #### **Test Suite** (6 files)
    - `tests/conftest.py` - `create_mock_message()` helper for consistent testing
    - `tests/test_store_integration.py` - Integration test fixes and real log usage
    - `tests/test_messages_view_colors.py` - Message object compatibility
    - `tests/test_message_wrapping.py` - Tuple ‚Üí Message object conversion
    - `tests/test_messages_status_footer.py` - Message handling updates
    - `tests/test_cligent_integration.py` - API migration (`log_id` ‚Üí `log_uri`)

    ### User Experience Improvements

    #### **Before This PR**
    - ‚ùå Selecting a commit replaced ALL stored messages regardless of source
    - ‚ùå No visual feedback about which messages belong to selected commits
    - ‚ùå Multi-commit selection could lead to accidental bulk operations
    - ‚ùå Mixing conversations from different log files caused data loss

    #### **After This PR**
    - ‚úÖ Per-log-file storage preserves messages from other conversations
    - ‚úÖ Auto-selection provides immediate visual feedback
    - ‚úÖ Single commit selection prevents accidental bulk operations
    - ‚úÖ Multiple conversations can coexist on the same commit safely

    ### Workflow Example
    ```bash
    # Store messages from conversation A to commit abc123
    tigs store  # Select commit abc123, select messages from log A ‚Üí stores only log A messages

    # Switch to conversation B, same commit
    tigs store  # Select commit abc123, select messages from log B ‚Üí stores log B messages + preserves log A

    # View both conversations
    tigs view   # Shows commit abc123 with messages from both log A and log B
    ```

    ### Testing & Quality
    - ‚úÖ **All 206 tests passing** (resolved 34 test failures from Message object refactor)
    - ‚úÖ **Full ruff compliance** (linting + formatting)
    - ‚úÖ **Backward compatibility** maintained for existing stored chats
    - ‚úÖ **Integration tested** with real Claude Code logs

    ### Breaking Changes
    - **API Change**: `log_id` ‚Üí `log_uri` (internal only, no user-facing impact)
    - **Selection Behavior**: Multi-commit selection disabled in store mode (UX improvement)

    ### Migration Notes
    - **Automatic**: Existing stored chats continue to work without migration
    - **New Format**: New messages stored with `log_uri` for improved organization
    - **Compatibility**: Works with both old and new chat formats

    This PR significantly enhances Tigs' capability to manage complex development workflows where multiple Claude Code conversations relate to the same commit, while providing better UX through visual feedback and preventing common user errors.
  timestamp: '2025-09-27T06:11:41Z'
  log_uri: 'dff17c84-77e6-433f-9745-19f645ee8708'
